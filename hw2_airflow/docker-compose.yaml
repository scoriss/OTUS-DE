version: '3'
x-airflow-common:
  &airflow-common
  image: apache/airflow:2.1.1-python3.8
  container_name: airflow
  environment:
    &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: 'true'
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS: 'false'
    AIRFLOW__API__AUTH_BACKEND: 'airflow.api.auth.backend.basic_auth'
    AIRFLOW__SCHEDULER__SCHEDULER_HEARTBEAT_SEC: 10
    AIRFLOW_CONN_ANALYTICS_DB: postgresql://analytic_user:analyticpwd@analytics-db:5432/analytics
  volumes:
    - ./airflow/dags:/opt/airflow/dags
  user: "50000:50000"
  networks:
    - btc_analytics
  depends_on:
    &airflow-common-depends-on
    postgres:
      condition: service_healthy
    analytics-db:
      condition: service_healthy
  
services:
  postgres:
    image: postgres:13
    container_name: airflow-db
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    networks:
      - btc_analytics
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  analytics-db:
    image: postgres:13
    container_name: analytics-db
    environment:
      POSTGRES_USER: analytic_user
      POSTGRES_PASSWORD: analyticpwd
      POSTGRES_DB: analytics
    ports:
      - "5433:5432"
    networks:
      - btc_analytics
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "analytic_user"]
      interval: 5s
      retries: 5
    restart: always
  
  airflow-webserver:
    <<: *airflow-common
    command: webserver
    container_name: airflow-webserver
    ports:
      - 8080:8080
    networks:
      - btc_analytics
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: scheduler
    container_name: airflow-scheduler
    networks:
      - btc_analytics
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-init:
    <<: *airflow-common
    command: version
    container_name: airflow-init
    environment:
      <<: *airflow-common-env
      _AIRFLOW_DB_UPGRADE: 'true'
      _AIRFLOW_WWW_USER_CREATE: 'true'
      _AIRFLOW_WWW_USER_USERNAME: airflow
      _AIRFLOW_WWW_USER_PASSWORD: airflow
    networks:
        - btc_analytics

networks:
  btc_analytics:
    driver: bridge          
